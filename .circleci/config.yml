version: 2

# Default configurations
terraform: &terraform
  docker:
    - image: antonbabenko/terracing:v0.0.3
  working_directory: /tmp/workspace/terraform/example3

jobs:
  checkout:
    <<: *terraform
    steps:
      - checkout
      - persist_to_workspace:
          root: .
          paths: .

# Infrastructure related jobs are below
  validate_infrastructure:
    <<: *terraform
    steps:
      - attach_workspace:
          at: /tmp/workspace
#      - run:
#          name: Add github.com to ~/.ssh/known_hosts (todo move to dockerfile)
#          command: mkdir -p ~/.ssh && ssh-keyscan -t rsa github.com >> ~/.ssh/known_hosts
      - run:
          name: Set terraform plugins directory
          command: echo -e "plugin_cache_dir = \"$HOME/.terraform.d/plugin-cache\"\ndisable_checkpoint = true" > ~/.terraformrc
      - run:
          name: Check Terraform configurations with tflint
          command: tflint
      - run:
          name: Validate Terraform syntax and formatting
          command: terraform init -input=false && terraform validate
      - run:
          name: Check if Terraform configurations are properly formatted
          command: if [[ -n "$(terraform fmt -write=false)" ]]; then echo "Some terraform files need be formatted, run 'terraform fmt' to fix"; exit 1; fi

  plan_infrastructure:
    <<: *terraform
    steps:
      - attach_workspace:
          at: /tmp/workspace
#      - run:
#          name: Add github.com to ~/.ssh/known_hosts (todo move to dockerfile)
#          command: mkdir -p ~/.ssh && ssh-keyscan -t rsa github.com >> ~/.ssh/known_hosts
      - run:
          name: terraform init
          command: terraform init -input=false
      - run:
          name: terraform plan
          command: terragrunt plan -input=false
#      - persist_to_workspace:
#          root: .
#          paths:
#            - .terraform # persist this to be able to apply execution plan without running init once more
#            - tfplan

  apply_infrastructure:
    <<: *terraform
    working_directory: /tmp/workspace
    steps:
      - attach_workspace:
          at: /tmp/workspace
#      - run:
#          name: terraform apply
#          command: terraform apply -input=false tfplan

master_workflow_filters: &master_workflow_filters
  filters:
    branches:
      only:
        - master

workflows:
  version: 2
  test-build-plan-apply:
    jobs:
      - checkout
      - validate_infrastructure:
          requires:
            - checkout
#      - plan_infrastructure:
#          requires:
#            - validate_infrastructure
#      - approve_infrastructure:
#          <<: *master_workflow_filters
#          type: approval
#          requires:
#            - plan_infrastructure
#      - apply_infrastructure:
#          requires:
#            - approve_infrastructure

