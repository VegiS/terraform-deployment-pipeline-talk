version: 2

# Default configurations
terraform: &terraform
  docker:
    - image: hashicorp/terraform:0.10.2
  working_directory: /tmp/workspace/terraform/example2

jobs:
# Application related jobs are below
  checkout:
    steps:
      - checkout
      - persist_to_workspace:
          root: .
          paths: .

# Infrastructure related jobs are below
  validate_infrastructure:
    <<: *terraform
    steps:
      - attach_workspace:
          at: /tmp/workspace
      - run:
          name: Add github.com to ~/.ssh/known_hosts
          command: mkdir ~/.ssh && ssh-keyscan -t rsa github.com >> ~/.ssh/known_hosts
      - run:
          name: terraform init
          command: terraform init -input=false
      - run:
          name: Validate Terraform configurations
          command: find . -type f -name "*.tf" -exec dirname {} \;|sort -u | while read m; do (terraform validate -check-variables=false "$m" && echo "âˆš $m") || exit 1 ; done
      - run:
          name: Check if Terraform configurations are properly formatted
          command: if [[ -n "$(terraform fmt -write=false)" ]]; then echo "Some terraform files need be formatted, run 'terraform fmt' to fix"; exit 1; fi
      - run:
          name: Install tflint
          command: curl -L -o /tmp/tflint.zip https://github.com/wata727/tflint/releases/download/v0.4.2/tflint_linux_amd64.zip && unzip /tmp/tflint.zip -d /usr/local/bin
      - run:
          name: Check Terraform configurations with tflint
          command: tflint

  plan_infrastructure:
    <<: *terraform
    steps:
      - attach_workspace:
          at: /tmp/workspace
      - run:
          name: Add github.com to ~/.ssh/known_hosts
          command: mkdir ~/.ssh && ssh-keyscan -t rsa github.com >> ~/.ssh/known_hosts
      - run:
          name: terraform init
          command: terraform init -input=false
      - run:
          name: terraform plan
          command: terraform plan -input=false -out=tfplan
      - persist_to_workspace:
          root: .
          paths:
            - .terraform # persist this to be able to apply execution plan without running init once more
            - tfplan

  apply_infrastructure:
    <<: *terraform
    working_directory: /tmp/workspace
    steps:
      - attach_workspace:
          at: /tmp/workspace
      - run:
          name: terraform apply
          command: terraform apply -input=false tfplan

workflows:
  version: 2
  test-build-plan-apply:
    jobs:
      - checkout
      - validate_infrastructure:
          requires:
            - checkout
      - plan_infrastructure:
          requires:
            - build_ami
            - validate_infrastructure
      - approve_infrastructure:
          type: approval
          requires:
            - plan_infrastructure
      - apply_infrastructure:
          requires:
            - approve_infrastructure

